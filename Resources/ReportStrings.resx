<?xml version="1.0" encoding="utf-8"?>

<root>
    <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
        <xsd:element name="root" msdata:IsDataSet="true">
            
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>1.3</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
    </resheader>
    <data name="AnalysisOf" xml:space="preserve">
        <value>This file is a merged representation of the codebase for '{0}', combined into a single document by ContextWeaver.</value>
    </data>
    <data name="FileSummary" xml:space="preserve">
        <value>File Summary</value>
    </data>
    <data name="Purpose" xml:space="preserve">
        <value>Purpose</value>
    </data>
    <data name="PurposeDescription" xml:space="preserve">
        <value>This file contains a packed representation of the repository's contents. It is designed to be easily consumable by AI systems for analysis, code review, or other automated processes.</value>
    </data>
    <data name="FileFormat" xml:space="preserve">
        <value>File Format</value>
    </data>
    <data name="FileFormatDescription" xml:space="preserve">
        <value>The content is organized as follows: 1. This summary section 2. A "Hotspots" section identifying key files by metrics 3. An "Instability Analysis" section providing architectural insights 4. A directory structure tree with clickable links to each file 5. Multiple file entries, each consisting of: a. A header with the file path (## File: path/to/file) b. The "Repo Map" summary (public API and imports) c. The full contents of the file in a code block</value>
    </data>
    <data name="UsageGuidelines" xml:space="preserve">
        <value>Usage Guidelines</value>
    </data>
    <data name="UsageGuidelinesDescription" xml:space="preserve">
        <value>- This file should be treated as read-only. Any changes should be made to the original repository files, not this packed version. - When processing this file, use the file path to distinguish between different files in the repository. - Be aware that this file may contain sensitive information. Handle it with the same level of security as you would the original repository.</value>
    </data>
    <data name="Notes" xml:space="preserve">
        <value>Notes</value>
    </data>
    <data name="NotesDescription" xml:space="preserve">
        <value>- Some files may have been excluded based on ContextWeaver's configuration in `.contextweaver.json` or the default `appsettings.json`. - Binary files are not included in this packed representation. - Files are sorted alphabetically by their full path for consistent ordering.</value>
    </data>
    <data name="HotspotsAnalysisTitle" xml:space="preserve">
        <value>🔥 Hotspots Analysis</value>
    </data>
    <data name="HotspotsTop5ByLOC" xml:space="preserve">
        <value>Top 5 Files by Lines of Code (LOC)</value>
    </data>
    <data name="HotspotsTop5ByImports" xml:space="preserve">
        <value>Top 5 Files by Number of Imports</value>
    </data>
    <data name="InstabilityAnalysisTitle" xml:space="preserve">
        <value>📊 Instability Analysis</value>
    </data>
    <data name="InstabilityIntro" xml:space="preserve">
        <value>This section estimates the Instability (I) metric for each top-level module (folder/project) based on its dependencies (imports).</value>
    </data>
    <data name="InstabilityFormula" xml:space="preserve">
        <value>`I = Ce / (Ca + Ce)`</value>
    </data>
    <data name="InstabilityCe" xml:space="preserve">
        <value>- `Ce` (Efferent): How many other modules this module uses (points outwards).</value>
    </data>
    <data name="InstabilityCa" xml:space="preserve">
        <value>- `Ca` (Afferent): How many other modules depend on this module (point inwards).</value>
    </data>
    <data name="InstabilityModuleOverview" xml:space="preserve">
        <value>Module Instability Overview:</value>
    </data>
    <data name="InstabilityTableHeader" xml:space="preserve">
        <value>| Module | Ca (Efferent) | Ce (Afferent) | Instability (I) | Description |</value>
    </data>
    <data name="InstabilityTableSeparator" xml:space="preserve">
        <value>|---|---|---|---|---|</value>
    </data>
    <data name="InstabilityInterpretationGuide" xml:space="preserve">
        <value>Interpretation Guide:</value>
    </data>
    <data name="InstabilityGuideStable" xml:space="preserve">
        <value>- `I ≈ 0`: Very stable (many depend on it; depends little on others). Often core contracts/interfaces.</value>
    </data>
    <data name="InstabilityGuideUnstable" xml:space="preserve">
        <value>- `I ≈ 1`: Very unstable (depends on many; few or none depend on it). Often concrete implementations like UI/adapters.</value>
    </data>
    <data name="InstabilityGuideIntermediate" xml:space="preserve">
        <value>- `I ≈ 0.5`: Intermediate stability.</value>
    </data>
    <data name="InstabilityGuideIdeal" xml:space="preserve">
        <value>Ideally, stable modules should be abstract, and unstable modules concrete. Avoid highly abstract, unstable modules, or highly concrete, stable modules.</value>
    </data>
    <data name="InstabilityDescStable" xml:space="preserve">
        <value>Very Stable / Core</value>
    </data>
    <data name="InstabilityDescUnstable" xml:space="preserve">
        <value>Very Unstable / Concrete</value>
    </data>
    <data name="InstabilityDescIntermediate" xml:space="preserve">
        <value>Intermediate Stability</value>
    </data>
    <data name="DirectoryStructure" xml:space="preserve">
        <value>Directory Structure</value>
    </data>
    <data name="Files" xml:space="preserve">
        <value>Files</value>
    </data>
    <data name="FileHeader" xml:space="preserve">
        <value>File: {0}</value>
    </data>
    <data name="RepoMapTitle" xml:space="preserve">
        <value>Repo Map: Public API Signatures and Imports Extraction</value>
    </data>
    <data name="PublicAPI" xml:space="preserve">
        <value>Public API:</value>
    </data>
    <data name="Imports" xml:space="preserve">
        <value>Imports:</value>
    </data>
    <data name="Metrics" xml:space="preserve">
        <value>Metrics</value>
    </data>
    <data name="LinesOfCode" xml:space="preserve">
        <value>Lines of Code (LOC):</value>
    </data>
    <data name="SourceCode" xml:space="preserve">
        <value>Source Code</value>
    </data>
</root>