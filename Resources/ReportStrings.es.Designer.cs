//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ContextWeaver.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ReportStrings_es {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ReportStrings_es() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ContextWeaver.Resources.ReportStrings.es", typeof(ReportStrings_es).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Este archivo es una representación consolidada del código fuente de &apos;{0}&apos;, fusionado en un único documento por ContextWeaver..
        /// </summary>
        internal static string AnalysisOf {
            get {
                return ResourceManager.GetString("AnalysisOf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estructura de Directorios.
        /// </summary>
        internal static string DirectoryStructure {
            get {
                return ResourceManager.GetString("DirectoryStructure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formato del Archivo.
        /// </summary>
        internal static string FileFormat {
            get {
                return ResourceManager.GetString("FileFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to El contenido se organiza de la siguiente manera: 1. Esta sección de resumen 2. Una sección de &quot;Hotspots&quot; que identifica archivos clave por métricas 3. Una sección de &quot;Análisis de Inestabilidad&quot; que proporciona información arquitectónica 4. Un árbol de la estructura de directorios con enlaces clicables a cada archivo 5. Múltiples entradas de archivo, cada una de las cuales consta de: a. Un encabezado con la ruta del archivo (## Archivo: ruta/al/archivo) b. El resumen del &quot;Repo Map&quot; (API pública e importacion [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string FileFormatDescription {
            get {
                return ResourceManager.GetString("FileFormatDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archivo: {0}.
        /// </summary>
        internal static string FileHeader {
            get {
                return ResourceManager.GetString("FileHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Archivos.
        /// </summary>
        internal static string Files {
            get {
                return ResourceManager.GetString("Files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resumen del Archivo.
        /// </summary>
        internal static string FileSummary {
            get {
                return ResourceManager.GetString("FileSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 🔥 Análisis de Hotspots.
        /// </summary>
        internal static string HotspotsAnalysisTitle {
            get {
                return ResourceManager.GetString("HotspotsAnalysisTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 5 Principales Archivos por Número de Importaciones.
        /// </summary>
        internal static string HotspotsTop5ByImports {
            get {
                return ResourceManager.GetString("HotspotsTop5ByImports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 5 Principales Archivos por Líneas de Código (LOC).
        /// </summary>
        internal static string HotspotsTop5ByLOC {
            get {
                return ResourceManager.GetString("HotspotsTop5ByLOC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Imports:.
        /// </summary>
        internal static string Imports {
            get {
                return ResourceManager.GetString("Imports", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 📊 Análisis de Inestabilidad.
        /// </summary>
        internal static string InstabilityAnalysisTitle {
            get {
                return ResourceManager.GetString("InstabilityAnalysisTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `Ca` (Aferente): Cuántos otros módulos dependen de este módulo (apunta hacia adentro)..
        /// </summary>
        internal static string InstabilityCa {
            get {
                return ResourceManager.GetString("InstabilityCa", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `Ce` (Eferente): Cuántos otros módulos usa este módulo (apunta hacia afuera)..
        /// </summary>
        internal static string InstabilityCe {
            get {
                return ResourceManager.GetString("InstabilityCe", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Estabilidad Intermedia.
        /// </summary>
        internal static string InstabilityDescIntermediate {
            get {
                return ResourceManager.GetString("InstabilityDescIntermediate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Muy Estable / Core.
        /// </summary>
        internal static string InstabilityDescStable {
            get {
                return ResourceManager.GetString("InstabilityDescStable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Muy Inestable / Concreto.
        /// </summary>
        internal static string InstabilityDescUnstable {
            get {
                return ResourceManager.GetString("InstabilityDescUnstable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to `I = Ce / (Ca + Ce)`.
        /// </summary>
        internal static string InstabilityFormula {
            get {
                return ResourceManager.GetString("InstabilityFormula", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Idealmente, los módulos estables deben ser abstractos y los inestables concretos. Evite módulos abstractos muy inestables o módulos concretos muy estables..
        /// </summary>
        internal static string InstabilityGuideIdeal {
            get {
                return ResourceManager.GetString("InstabilityGuideIdeal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `I ≈ 0.5`: Estabilidad intermedia..
        /// </summary>
        internal static string InstabilityGuideIntermediate {
            get {
                return ResourceManager.GetString("InstabilityGuideIntermediate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `I ≈ 0`: Muy estable (muchos dependen de él; depende poco de otros). A menudo son contratos/interfaces principales..
        /// </summary>
        internal static string InstabilityGuideStable {
            get {
                return ResourceManager.GetString("InstabilityGuideStable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - `I ≈ 1`: Muy inestable (depende de muchos; pocos o ninguno dependen de él). A menudo son implementaciones concretas como UI/adaptadores..
        /// </summary>
        internal static string InstabilityGuideUnstable {
            get {
                return ResourceManager.GetString("InstabilityGuideUnstable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Guía de Interpretación:.
        /// </summary>
        internal static string InstabilityInterpretationGuide {
            get {
                return ResourceManager.GetString("InstabilityInterpretationGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Esta sección estima la métrica de Inestabilidad (I) para cada módulo de nivel superior (carpeta/proyecto) basándose en sus dependencias (importaciones)..
        /// </summary>
        internal static string InstabilityIntro {
            get {
                return ResourceManager.GetString("InstabilityIntro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resumen de Inestabilidad del Módulo:.
        /// </summary>
        internal static string InstabilityModuleOverview {
            get {
                return ResourceManager.GetString("InstabilityModuleOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to | Módulo | Ca (Eferente) | Ce (Aferente) | Inestabilidad (I) | Descripción |.
        /// </summary>
        internal static string InstabilityTableHeader {
            get {
                return ResourceManager.GetString("InstabilityTableHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to |---|---|---|---|---|.
        /// </summary>
        internal static string InstabilityTableSeparator {
            get {
                return ResourceManager.GetString("InstabilityTableSeparator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Líneas de Código (LOC):.
        /// </summary>
        internal static string LinesOfCode {
            get {
                return ResourceManager.GetString("LinesOfCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Métricas.
        /// </summary>
        internal static string Metrics {
            get {
                return ResourceManager.GetString("Metrics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notas.
        /// </summary>
        internal static string Notes {
            get {
                return ResourceManager.GetString("Notes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Algunos archivos pueden haber sido excluidos según la configuración de ContextWeaver en `.contextweaver.json` o el `appsettings.json` por defecto. - Los archivos binarios no se incluyen en esta representación empaquetada. - Los archivos se ordenan alfabéticamente por su ruta completa para una ordenación consistente..
        /// </summary>
        internal static string NotesDescription {
            get {
                return ResourceManager.GetString("NotesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to API Pública:.
        /// </summary>
        internal static string PublicAPI {
            get {
                return ResourceManager.GetString("PublicAPI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Propósito.
        /// </summary>
        internal static string Purpose {
            get {
                return ResourceManager.GetString("Purpose", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Este archivo contiene una representación empaquetada de los contenidos del repositorio. Está diseñado para ser fácilmente consumible por sistemas de IA para análisis, revisión de código u otros procesos automatizados..
        /// </summary>
        internal static string PurposeDescription {
            get {
                return ResourceManager.GetString("PurposeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mapa del Repositorio: Extracción de Firmas Públicas e Imports.
        /// </summary>
        internal static string RepoMapTitle {
            get {
                return ResourceManager.GetString("RepoMapTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Código Fuente.
        /// </summary>
        internal static string SourceCode {
            get {
                return ResourceManager.GetString("SourceCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pautas de Uso.
        /// </summary>
        internal static string UsageGuidelines {
            get {
                return ResourceManager.GetString("UsageGuidelines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Este archivo debe ser tratado como de solo lectura. Cualquier cambio debe realizarse en los archivos originales del repositorio, no en esta versión empaquetada. - Al procesar este archivo, use la ruta del archivo para distinguir entre los diferentes archivos del repositorio. - Tenga en cuenta que este archivo puede contener información sensible. Manéjelo con el mismo nivel de seguridad que manejaría el repositorio original..
        /// </summary>
        internal static string UsageGuidelinesDescription {
            get {
                return ResourceManager.GetString("UsageGuidelinesDescription", resourceCulture);
            }
        }
    }
}
